name: Build-episodic

on: [push, pull_request]

jobs:
  build-linux-i386:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build linux-i386
      run: |
        scripts/build-ubuntu-i386.sh --build-games episodic

  build-linux-amd64:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Build linux-amd64
      run: |
        scripts/build-ubuntu-amd64.sh --build-games episodic

  build-android-armv7a:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Build android-armv7a
      run: |
        scripts/build-android-armv7a.sh --build-games episodic

  build-windows-i386:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Build windows-i386
      run: |
        git submodule init && git submodule update
        ./waf.bat configure -T debug --build-games episodic --32bits
        ./waf.bat build

  build-windows-amd64:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Build windows-amd64
      run: |
        git submodule init && git submodule update
        ./waf.bat configure -T debug --build-games episodic
        ./waf.bat build

  build-dedicated-windows-i386:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated windows-i386
      run: |
        git submodule init && git submodule update
        ./waf.bat configure -T debug -d --build-games episodic
        ./waf.bat build

  build-dedicated-windows-amd64:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated windows-amd64
      run: |
        git submodule init && git submodule update
        ./waf.bat configure -T debug -d --build-games episodic
        ./waf.bat build

  build-dedicated-linux-i386:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated linux-i386
      run: |
        scripts/build-ubuntu-i386.sh -d --build-games episodic

  build-dedicated-linux-amd64:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated linux-amd64
      run: |
        scripts/build-ubuntu-amd64.sh -d --build-games episodic

  build-macos-amd64:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build macos-amd64
      run: |
        scripts/build-macos-amd64.sh --build-games episodic

  build-dedicated-macos-amd64:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated macos-amd64
      run: |
        scripts/build-macos-amd64.sh -d --build-games episodic
